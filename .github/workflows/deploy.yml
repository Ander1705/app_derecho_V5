name: 🚀 Deploy Consultorio Jurídico UCMC

on:
  push:
    branches: [ main ]

jobs:
  # ============================================================================
  # JOB 1: Tests y Validación
  # ============================================================================
  test:
    name: 🧪 Tests y Validación
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4

    - name: 🐹 Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    # Tests Backend
    - name: 🧪 Test Go Backend
      working-directory: ./go-backend
      run: |
        go mod download
        go mod verify
        go vet ./...

    # Build Frontend
    - name: 🏗️ Build React Frontend
      working-directory: ./frontend
      run: |
        npm ci
        npm run build

  # ============================================================================
  # JOB 2: Deploy
  # ============================================================================
  deploy:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4

    - name: 🚀 Deploy via Docker Compose
      run: |
        echo "🚀 Iniciando despliegue..."
        
        # Build y Deploy con Docker Compose
        docker-compose build --no-cache
        docker-compose down --remove-orphans
        docker-compose up -d
        
        # Esperar que los servicios estén listos
        echo "⏳ Esperando que los servicios inicien..."
        sleep 30
        
        # Health Check
        echo "🔍 Verificando estado de los servicios..."
        docker-compose ps
        
        # Verificar endpoints
        curl -f http://localhost:8000/health || (echo "❌ Backend health check failed" && exit 1)
        curl -f http://localhost:3000/health || (echo "❌ Frontend health check failed" && exit 1)
        
        echo "✅ Despliegue completado exitosamente!"

  # ============================================================================
  # JOB 3: Notificación
  # ============================================================================
  notify:
    name: 📢 Notificación
    runs-on: ubuntu-latest
    needs: [test, deploy]
    if: always()

    steps:
    - name: 📢 Notificación de Deploy Exitoso
      if: needs.deploy.result == 'success'
      run: |
        echo "✅ Consultorio Jurídico UCMC desplegado exitosamente en producción!"
        echo "🌐 Aplicación disponible en: http://localhost:3000"
        echo "🔗 API disponible en: http://localhost:8000"

    - name: 📢 Notificación de Error
      if: failure()
      run: |
        echo "❌ Error en el despliegue de Consultorio Jurídico UCMC"
        echo "📋 Revisar logs de GitHub Actions para más detalles"