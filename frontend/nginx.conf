# ==============================================================================
# CONFIGURACIÓN NGINX OPTIMIZADA - Frontend Consultorio Jurídico UCMC
# Desarrollador: Anderson Felipe Montaña Castelblanco
# Optimizado para máximo rendimiento y seguridad
# ==============================================================================

server {
    listen 3000;
    server_name localhost;
    
    # Configuraciones de rendimiento
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;
    
    # Configuración de buffer optimizada
    client_body_buffer_size 16k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Directorio raíz
    root /usr/share/nginx/html;
    index index.html index.htm;
    
    # Configuración de compresión GZIP
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/json
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        application/x-font-ttf;
    
    # Configuración de compresión Brotli (si está disponible)
    brotli on;
    brotli_comp_level 6;
    brotli_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/json
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Headers de seguridad y rendimiento
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # Headers de optimización
    add_header X-Served-By "Nginx-Optimized" always;
    
    # Cache para archivos estáticos
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status "HIT-STATIC";
        
        # Pre-compressed files
        location ~* \.(js|css)$ {
            gzip_static on;
            brotli_static on;
        }
        
        # Fallback si el archivo no existe
        try_files $uri $uri/ =404;
    }
    
    # Cache para archivos de fuentes
    location ~* \.(woff|woff2|ttf|eot|otf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
        add_header X-Cache-Status "HIT-FONT";
    }
    
    # Cache para archivos HTML (sin cache para el index.html principal)
    location ~* \.html$ {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header X-Cache-Status "NO-CACHE-HTML";
    }

    
    # Manejo del routing de React (SPA)
    location / {
        try_files $uri $uri/ /index.html;
        
        # Headers para archivos dinámicos
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        add_header X-Cache-Status "NO-CACHE-SPA";
    }
    
    # API proxy para backend
    location /api/ {
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_send_timeout 300s;
        proxy_buffering off;
        proxy_request_buffering off;
    }
    
    # Endpoint de health check
    location /health {
        access_log off;
        return 200 '{"status": "OK", "service": "frontend", "timestamp": "$time_iso8601"}';
        add_header Content-Type application/json;
        add_header X-Health-Check "OK";
    }
    
    # Servir archivos estáticos optimizados
    location /static/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status "HIT-STATIC-DIR";
    }
    
    # Bloquear acceso a archivos sensibles
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(env|config|log|sql|backup)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Optimización para el manejo de errores
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    # Archivos especiales
    location = /robots.txt {
        log_not_found off;
        access_log off;
        expires 1d;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    location = /manifest.json {
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # Logs optimizados
    access_log /var/log/nginx/access.log combined buffer=16k flush=5s;
    error_log /var/log/nginx/error.log warn;
    
    # Preload para recursos críticos
    location = /index.html {
        add_header Link "</static/css/main.*.css>; rel=preload; as=style" always;
        add_header Link "</static/js/main.*.js>; rel=preload; as=script" always;
        try_files $uri /index.html;
    }
}